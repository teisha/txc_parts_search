"use strict";const Params=require("../services/loaderParameterService"),History=require("../services/historyService"),UserService=require("../services/userService"),RequestService=require("../services/requestService"),{getSingleErrorMessage:getSingleErrorMessage}=require("../util/common.js");exports.viewGenericLoaderParams=((e,r,s)=>{Params.fetchAllGenericProcessingParameters().then(([e,s])=>{r.render("admin/loader/loader-params-list",{params:e,pageTitle:"Loader Params (Generic)",path:"/admin/parameters"})}).catch(e=>console.log(e))}),exports.viewMarkupLoaderParams=((e,r,s)=>{Params.fetchAllMarkupValues().then(([e,s])=>{r.render("admin/loader/markup-values",{params:e,pageTitle:"Loader Params (List Price Markup)",path:"/admin/parameters"})}).catch(s=>(console.log(s),e.flash("error","Could not load markup values."),r.status(500).redirect("/show-loader-params")))}),exports.viewLoaderHistory=(async(e,r,s)=>{try{const[s,a]=await History.getProcessHistory(),[t,o]=await History.getProcessHistoryDetails();r.render("admin/loader/history",{params:{loaderSummary:s,loaderDetails:t},pageTitle:"Loader History",path:"/admin/parameters"})}catch(s){return console.log(s),e.flash("error","Could not load processing history."),r.status(500).redirect("/show-loader-params")}}),exports.viewWebUsers=(async(e,r,s)=>{try{const[s,a]=await UserService.fetchAllUsers();r.render("admin/web/user-admin",{params:s,pageTitle:"Web Users",path:"/admin/parameters"})}catch(s){return console.log(s),e.flash("error","Could not load users."),r.status(500).redirect("/show-loader-params")}}),exports.getRequest=(async(e,r,s)=>{const a=e.flash("error"),t=e.flash("info"),[o,i]=await RequestService.fetchAllRequests();r.render("admin/requests/user-requests",{params:o,pageTitle:"Submit Request",path:"/admin/parameters",errorMessage:getSingleErrorMessage(a),infoMessage:getSingleErrorMessage(t)})}),exports.postRequest=(async(e,r,s)=>{const a=e.session.user,t=e.body.request,o=e.body.categoryName;try{return await RequestService.addRequests(o,t,a.userName,a.id),e.flash("info","Request added successfully"),r.status(200).redirect("/admin/requests")}catch(s){return console.log(s),e.flash("error","Could not log request."),r.status(500).redirect("/admin/requests")}}),exports.showLoaderParams=((e,r,s)=>{let a=e.flash("error");r.render("admin/loader/chose-params",{params:{},pageTitle:"Loader Params",path:"/admin/parameters",errorMessage:getSingleErrorMessage(a)})});