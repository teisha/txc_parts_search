"use strict";const User=require("../models/user"),userService=require("../services/userService"),bcrypt=require("bcryptjs"),{getSingleErrorMessage:getSingleErrorMessage}=require("../util/common.js");exports.getLogin=((e,r,s)=>{let o=e.flash("error");r.status(200).render("auth/login",{path:"/login",pageTitle:"Login",errorMessage:getSingleErrorMessage(o)})}),exports.postLogin=(async(e,r,s)=>{const o=e.body.username,t=e.body.password;if(!o||void 0===o||!t||void 0===t)return e.flash("error","Please enter username and password to log in."),r.status(422).redirect("/login");try{const[s,i]=await userService.findByUserName(o);let n=s[0];if(!n||void 0===n.username)return e.flash("error","Invalid email or password."),r.status(422).redirect("/login");try{if(await bcrypt.compare(t,n.user_password)){let s=new User(n.user_id,n.username,n.first_name,n.last_name,n.email,n.phone_number,n.phone_extension);return e.session.isLoggedIn=!0,e.session.user=s,e.session.save(s=>{s&&console.log("ERROR SAVING SESSION"+s),e.session.user.saveLoginHistory(e.sessionID),r.status(200).redirect("/index")})}}catch(e){console.log("BCRYPT ERROR ON COMPARE: "+e),r.status(422).redirect("/login")}}catch(s){return console.log("ERROR looking up user: "+o+": "+s),e.flash("error","Could not log in user.  Please try again later."),r.status(500).redirect("/login")}return e.flash("error","Invalid email or password"),r.status(422).redirect("/login")}),exports.postLogout=((e,r,s)=>{e.session.destroy(e=>{console.log(e),r.redirect("/")})});